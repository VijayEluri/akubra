/* $HeadURL::                                                                            $
 * $Id$
 *
 * Copyright (c) 2008,2009 by Fedora Commons Inc.
 * http://www.fedoracommons.org
 *
 * In collaboration with Topaz Inc.
 * http://www.topazproject.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
digraph blob {
  rankdir=LR;
  overlap=false

  node [shape = doublecircle]; Open Exists Unknown;
  node [shape = circle];

  Open -> Open [ label = "getConnection()::*" ];

  Open -> Open [ label = "getId()::*" ];

  Open -> Open [ label = "delete()::*" ];

  Open -> Exists [ label = "create()::success" ];
  Open -> Open [ style = dotted, label = "create()::DuplicateBlobException" ];
  Open -> Unknown [ style = dotted, label = "create()::IOException" ];

  Open -> Open [ label = "exists()::success" ];
  Open -> Unknown [ style = dotted, label = "exists()::IOException" ];

  Open -> Open [ style = dotted, label = "moveTo()::MissingBlobException" ];
  Open -> Open [ style = dotted, label = "moveTo()::NullPointerException" ];
  Open -> Unknown [ style = dotted, label = "moveTo()::IOException" ];

  Exists -> Exists [ label = "getConnection()::*" ];

  Exists -> Exists [ label = "getId()::*" ];

  Exists -> Exists [ label = "openInputStream()::success" ];
  Exists -> Exists [ style = dotted, label = "openInputStream()::MissingBlobException" ];
  Exists -> Unknown [ style = dotted, label = "openInputStream()::IOException" ];

  Exists -> Exists [ label = "openOutputStream()::success" ];
  Exists -> Exists [ style = dotted, label = "openOutputStream()::MissingBlobException" ];
  Exists -> Unknown [ style = dotted, label = "openOutputStream()::IOException" ];

  Exists -> Unknown [ label = "delete()::success" ];
  Exists -> Unknown [ style = dotted, label = "delete()::IOException" ];

  Exists -> Exists [ label = "getSize()::success" ];
  Exists -> Unknown [ style = dotted, label = "getSize()::IOException" ];

  Exists -> Exists [ label = "exists()::success" ];
  Exists -> Unknown [ style = dotted, label = "exists()::IOException" ];

  Exists -> Unknown [ label = "moveTo()::sucess" ];
  Exists -> Exists [ style = dotted, label = "moveTo()::DuplicateBlobException" ];
  Exists -> Exists [ style = dotted, label = "moveTo()::UnsupportedIdException" ];
  Exists -> Unknown [ style = dotted, label = "moveTo()::IOException" ];
}
